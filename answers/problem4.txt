What is wrong with Ball.java? Please fix the problems with Ball.java and document
your work in problem4.txt. 

There were a few things wrong in Ball.java. The first issue was in the constructor. 
In the constructor color was set to color and volume was set to volume. This is incorrect. 
We needed to say this.color and this.volume to refer to the Ball's class variable of color and volume.
Another thing were the actual methods getVolume() and getColor(). getVolume() was returning zero when 
it should've returned the value of our class variable volume, which is obtained using this.volume.
getColor() was returning null when it should've returned the value of our class variable color, 
which is obtained using this.color.

There are two obvious approaches to implementing getVolume():
• Every time getVolume() is called, go through all the Balls in the Set and add
up the volumes. (Hint: one solution might be to use a for-each loop to extract
Balls from the Set.)
• Keep track of the total volume of the Balls in BallContainer whenever Balls
are added and removed. This eliminates the need to perform any computations
when getVolume() is called.
Which approach do you think is the better one? Why?
Approach #2 is better for the following reasons. For apporach number too, the runtime 
is always linear with respect to the size of BallContainer. We must always iterate through 
the BallContainer and add up the volumes to figure out the total volume. Approach #2 is more
efficient as we always hold the current total volume at all times. 

There are many ways to implement getBallsFromSmallest(). Briefly describe at least
two different ways. Your answers should differ in the implementation of Box, not in lowerlevel
implementation (for example, using an insertion sort instead of a selection sort is a
lower-level implementation because it does not affect how Box is implemented). Hint: think
about different places in the Box class where you could add code to achieve the desired
functionality.
- One way to implement getBallsFromSmallest() is too copy all of the balls in BallContainer 
to an ArrayList and sort that ArrayList with a comparator. 
- Another way to implement getBallsFromSmallest() is to sort them whenever we add a new ball. 
This could be done by adding into a Binary Search Tree for example, or we could use a TreeSet 
in Java. 
• Which of the above ways do you think is the best? Why? 
I am not sure which is exactly better but it might depend on the input and the number of 
items we add. So it could go either way. Although, I'd say the first approach is more straight 
forward and probably easier to implement. 
